/*
 * STB config API
 *
 * This is the API that is used to configure an STB
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SetDeviceConfigRequest struct {

	IpAddress string `json:"ipAddress"`

	NetMask string `json:"netMask"`

	BitRate int32 `json:"bitRate"`

	Duplex string `json:"duplex"`
}

// AssertSetDeviceConfigRequestRequired checks if the required fields are not zero-ed
func AssertSetDeviceConfigRequestRequired(obj SetDeviceConfigRequest) error {
	elements := map[string]interface{}{
		"ipAddress": obj.IpAddress,
		"netMask": obj.NetMask,
		"bitRate": obj.BitRate,
		"duplex": obj.Duplex,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSetDeviceConfigRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SetDeviceConfigRequest (e.g. [][]SetDeviceConfigRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSetDeviceConfigRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSetDeviceConfigRequest, ok := obj.(SetDeviceConfigRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSetDeviceConfigRequestRequired(aSetDeviceConfigRequest)
	})
}
